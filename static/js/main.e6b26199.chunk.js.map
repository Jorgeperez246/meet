{"version":3,"sources":["Event.js","EventList.js","CitySearch.js","NumberOfEvents.js","mock-data.js","api.js","App.js","serviceWorkerRegistration.js","reportWebVitals.js","index.js"],"names":["Event","state","collapsed","handleClick","_this","setState","event","this","props","react_default","a","createElement","className","summary","start","dateTime","timeZone","location","variant","concat","onClick","href","htmlLink","rel","target","description","Component","EventList","events","map","key","id","src_Event","CitySearch","query","suggestions","showSuggestions","undefined","handleInputChanged","value","locations","filter","toUpperCase","indexOf","handleItemClicked","suggestion","updateEvents","_this2","type","onChange","onFocus","style","display","NumberOfEvents","numberOfEvents","isNaN","console","log","for","mockData","kind","etag","status","created","updated","creator","email","self","organizer","end","recurringEventId","originalStartTime","iCalUID","sequence","reminders","useDefault","eventType","extractLocations","Object","toConsumableArray","Set","checkToken","_ref","asyncToGenerator","_regeneratorRuntime","mark","_callee","accessToken","result","wrap","_context","prev","next","fetch","then","res","json","catch","error","sent","abrupt","stop","_x","apply","arguments","getEvents","_ref2","_callee2","token","url","_context2","NProgress","window","startsWith","done","getAccessToken","removeQuery","axios","get","data","localStorage","setItem","JSON","stringify","_ref3","_callee3","tokenCheck","searchParams","code","results","authUrl","_context3","getItem","t0","removeItem","URLSearchParams","search","getToken","history","pushState","pathname","newurl","protocol","host","_ref4","_callee4","encodeCode","response","_yield$response$json","access_token","_context4","encodeURIComponent","ok","Error","_x2","App","eventNum","locationEvents","slice","mounted","src_CitySearch","src_EventList","src_NumberOfEvents","Boolean","hostname","match","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode","src_App_0","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.e6b26199.chunk.js","sourcesContent":["import React, { Component } from \"react\";\n\nclass Event extends Component {\n  state = {\n    collapsed: true,\n  };\n\n  handleClick = () => {\n    this.setState({\n      collapsed: !this.state.collapsed,\n    });\n  };\n\n  render() {\n    const { event } = this.props;\n    const { collapsed } = this.state;\n    return (\n      // uses mock data for event timezone and dateTime\n      <div className=\"event\">\n        <h2 className=\"summary\">{event.summary}</h2>\n        <p className=\"start-date\">\n          {event.start.dateTime} ({event.start.timeZone})\n        </p>\n\n        <p className=\"location\">{event.location}</p>\n        {/* switches classname depending on whether or not collapsed is\n      true or false. */}\n        <button\n          variant=\"outline-info\"\n          className={`details-button ${collapsed ? \"show\" : \"hide\"}-details`}\n          onClick={this.handleClick}\n        >\n          {collapsed ? \"Show Details\" : \"Hide Details\"}\n        </button>\n\n        {!collapsed && (\n          <div\n            className={`extra-details ${\n              this.state.collapsed ? \"hide\" : \"show\"\n            }`}\n          >\n            <h3>About the event:</h3>\n            <a href={event.htmlLink} rel=\"noopener noreferrer\" target=\"_blank\">\n              See details on Google Calendar\n            </a>\n            <p className=\"event-description\">{event.description}</p>\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default Event;\n","// src/EventList.js\n\nimport React, { Component } from \"react\";\nimport Event from \"./Event\";\nclass EventList extends Component {\n  render() {\n    const { events } = this.props;\n    return (\n      <ul className=\"EventList\">\n        {events.map((event) => (\n          <li key={event.id}>\n            <Event event={event} />\n          </li>\n        ))}\n      </ul>\n    );\n  }\n}\n\nexport default EventList;\n","// src/CitySearch.js\n\nimport React, { Component } from \"react\";\n\nclass CitySearch extends Component {\n  state = {\n    query: \"\",\n    suggestions: [],\n    showSuggestions: undefined,\n  };\n\n  handleInputChanged = (event) => {\n    const value = event.target.value;\n    const suggestions = this.props.locations.filter((location) => {\n      return location.toUpperCase().indexOf(value.toUpperCase()) > -1;\n    });\n    this.setState({\n      query: value,\n      suggestions,\n    });\n  };\n\n  handleItemClicked = (suggestion) => {\n    this.setState({\n      query: suggestion,\n      showSuggestions: false,\n    });\n\n    this.props.updateEvents(suggestion, undefined);\n  };\n\n  render() {\n    return (\n      <div className=\"CitySearch\">\n        <input\n          type=\"text\"\n          className=\"city\"\n          value={this.state.query}\n          onChange={this.handleInputChanged}\n          onFocus={() => {\n            this.setState({ showSuggestions: true });\n          }}\n        />\n        <ul\n          className=\"suggestions\"\n          style={this.state.showSuggestions ? {} : { display: \"none\" }}\n        >\n          {this.state.suggestions.map((suggestion) => (\n            <li\n              key={suggestion}\n              onClick={() => this.handleItemClicked(suggestion)}\n            >\n              {suggestion}\n            </li>\n          ))}\n          <li onClick={() => this.handleItemClicked(\"all\")}>\n            <b>See all cities</b>\n          </li>\n        </ul>\n      </div>\n    );\n  }\n}\n\nexport default CitySearch;\n","import React, { Component } from \"react\";\n\nclass NumberOfEvents extends Component {\n  state = {\n    numberOfEvents: 25,\n  };\n\n  handleInputChanged = (event) => {\n    const value = event.target.value;\n    if (!isNaN(value) && value >= 1 && value <= 25) {\n      this.setState({ numberOfEvents: value });\n    } else {\n      console.log(\"Please enter a valid number.\");\n    }\n    this.props.updateEvents(undefined, value);\n  };\n\n  render() {\n    return (\n      <div className=\"numberOfEvents\">\n        <label for=\"num-events\">Number of Events</label>\n        <input\n          type=\"text\"\n          id=\"num-events\"\n          value={this.state.numberOfEvents}\n          onChange={this.handleInputChanged}\n        />\n      </div>\n    );\n  }\n}\nexport default NumberOfEvents;\n","// src/mock-data.js\n\nconst mockData = [\n  {\n    kind: \"calendar#event\",\n    etag: '\"3181161784712000\"',\n    id: \"4eahs9ghkhrvkld72hogu9ph3e_20200519T140000Z\",\n    status: \"confirmed\",\n    htmlLink:\n      \"https://www.google.com/calendar/event?eid=NGVhaHM5Z2hraHJ2a2xkNzJob2d1OXBoM2VfMjAyMDA1MTlUMTQwMDAwWiBmdWxsc3RhY2t3ZWJkZXZAY2FyZWVyZm91bmRyeS5jb20\",\n    created: \"2020-05-19T19:17:46.000Z\",\n    updated: \"2020-05-27T12:01:32.356Z\",\n    summary: \"Learn JavaScript\",\n    description:\n      \"Have you wondered how you can ask Google to show you the list of the top ten must-see places in London? And how Google presents you the list? How can you submit the details of an application? Well, JavaScript is doing these. :) \\n\\nJavascript offers interactivity to a dull, static website. Come, learn JavaScript with us and make those beautiful websites.\",\n    location: \"London, UK\",\n    creator: {\n      email: \"fullstackwebdev@careerfoundry.com\",\n      self: true,\n    },\n    organizer: {\n      email: \"fullstackwebdev@careerfoundry.com\",\n      self: true,\n    },\n    start: {\n      dateTime: \"2020-05-19T16:00:00+02:00\",\n      timeZone: \"Europe/Berlin\",\n    },\n    end: {\n      dateTime: \"2020-05-19T17:00:00+02:00\",\n      timeZone: \"Europe/Berlin\",\n    },\n    recurringEventId: \"4eahs9ghkhrvkld72hogu9ph3e\",\n    originalStartTime: {\n      dateTime: \"2020-05-19T16:00:00+02:00\",\n      timeZone: \"Europe/Berlin\",\n    },\n    iCalUID: \"4eahs9ghkhrvkld72hogu9ph3e@google.com\",\n    sequence: 0,\n    reminders: {\n      useDefault: true,\n    },\n    eventType: \"default\",\n  },\n  {\n    kind: \"calendar#event\",\n    etag: '\"3181159875584000\"',\n    id: \"3qtd6uscq4tsi6gc7nmmtpqlct_20200520T120000Z\",\n    status: \"confirmed\",\n    htmlLink:\n      \"https://www.google.com/calendar/event?eid=M3F0ZDZ1c2NxNHRzaTZnYzdubW10cHFsY3RfMjAyMDA1MjBUMTIwMDAwWiBmdWxsc3RhY2t3ZWJkZXZAY2FyZWVyZm91bmRyeS5jb20\",\n    created: \"2020-05-19T19:14:30.000Z\",\n    updated: \"2020-05-27T11:45:37.792Z\",\n    summary: \"React is Fun\",\n    description:\n      \"Love HTML, CSS, and JS? Want to become a cool front-end developer? \\n\\nReact is one of the most popular front-end frameworks. There is a huge number of job openings for React developers in most cities. \\n\\nJoin us in our free React training sessions and give your career a new direction. \",\n    location: \"Berlin, Germany\",\n    creator: {\n      email: \"fullstackwebdev@careerfoundry.com\",\n      self: true,\n    },\n    organizer: {\n      email: \"fullstackwebdev@careerfoundry.com\",\n      self: true,\n    },\n    start: {\n      dateTime: \"2020-05-20T14:00:00+02:00\",\n      timeZone: \"Europe/Berlin\",\n    },\n    end: {\n      dateTime: \"2020-05-20T15:00:00+02:00\",\n      timeZone: \"Europe/Berlin\",\n    },\n    recurringEventId: \"3qtd6uscq4tsi6gc7nmmtpqlct\",\n    originalStartTime: {\n      dateTime: \"2020-05-20T14:00:00+02:00\",\n      timeZone: \"Europe/Berlin\",\n    },\n    iCalUID: \"3qtd6uscq4tsi6gc7nmmtpqlct@google.com\",\n    sequence: 0,\n    reminders: {\n      useDefault: true,\n    },\n    eventType: \"default\",\n  },\n];\n\nexport { mockData };\n","/**\n *\n * @param {*} events:\n * The following function should be in the “api.js” file.\n * This function takes an events array, then uses map to create a new array with only locations.\n * It will also remove all duplicates by creating another new array using the spread operator and spreading a Set.\n * The Set will remove all duplicates from the array.\n */\nimport axios from \"axios\";\nimport { mockData } from \"./mock-data\";\nimport NProgress from \"nprogress\";\n\nexport const extractLocations = (events) => {\n  var extractLocations = events.map((event) => event.location);\n  var locations = [...new Set(extractLocations)];\n  return locations;\n};\n\nconst checkToken = async (accessToken) => {\n  const result = await fetch(\n    `https://www.googleapis.com/oauth2/v1/tokeninfo?access_token=${accessToken}`\n  )\n    .then((res) => res.json())\n    .catch((error) => error.json());\n\n  return result;\n};\n\nexport const getEvents = async () => {\n  NProgress.start();\n\n  if (window.location.href.startsWith(\"http://localhost\")) {\n    NProgress.done();\n    return mockData;\n  }\n\n  const token = await getAccessToken();\n\n  if (token) {\n    removeQuery();\n    const url =\n      \"https://albzl8jmqb.execute-api.us-east-1.amazonaws.com/dev/api/get-events\" +\n      \"/\" +\n      token;\n    const result = await axios.get(url);\n    if (result.data) {\n      var locations = extractLocations(result.data.events);\n      localStorage.setItem(\"lastEvents\", JSON.stringify(result.data));\n      localStorage.setItem(\"locations\", JSON.stringify(locations));\n    }\n    NProgress.done();\n    return result.data.events;\n  }\n};\n\nexport const getAccessToken = async () => {\n  const accessToken = localStorage.getItem(\"access_token\");\n\n  const tokenCheck = accessToken && (await checkToken(accessToken));\n\n  if (!accessToken || tokenCheck.error) {\n    await localStorage.removeItem(\"access_token\");\n    const searchParams = new URLSearchParams(window.location.search);\n    const code = await searchParams.get(\"code\");\n    if (!code) {\n      const results = await axios.get(\n        \"https://albzl8jmqb.execute-api.us-east-1.amazonaws.com/dev/api/get-auth-url\"\n      );\n      const { authUrl } = results.data;\n      return (window.location.href = authUrl);\n    }\n    return code && getToken(code);\n  }\n  return accessToken;\n};\n\nconst removeQuery = () => {\n  if (window.history.pushState && window.location.pathname) {\n    var newurl =\n      window.location.protocol +\n      \"//\" +\n      window.location.host +\n      window.location.pathname;\n    window.history.pushState(\"\", \"\", newurl);\n  } else {\n    newurl = window.location.protocol + \"//\" + window.location.host;\n    window.history.pushState(\"\", \"\", newurl);\n  }\n};\n\nconst getToken = async (code) => {\n  try {\n    const encodeCode = encodeURIComponent(code);\n\n    const response = await fetch(\n      \"https://albzl8jmqb.execute-api.us-east-1.amazonaws.com/dev/api/token\" +\n        \"/\" +\n        encodeCode\n    );\n    if (!response.ok) {\n      throw new Error(`HTTP error! status: ${response.status}`);\n    }\n    const { access_token } = await response.json();\n    access_token && localStorage.setItem(\"access_token\", access_token);\n    return access_token;\n  } catch (error) {\n    error.json();\n  }\n};\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport EventList from \"./EventList\";\nimport CitySearch from \"./CitySearch\";\nimport NumberOfEvents from \"./NumberOfEvents\";\nimport { getEvents, extractLocations } from \"./api\";\nimport \"./nprogress.css\";\nclass App extends Component {\n  state = {\n    events: [],\n    locations: [],\n    numberOfEvents: 25,\n  };\n  componentDidMount() {\n    this.mounted = true;\n    getEvents().then((events) => {\n      if (this.mounted) {\n        this.setState({ events, locations: extractLocations(events) });\n      }\n    });\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n  updateEvents = (location, eventNum) => {\n    if (!location) location = \"all\";\n    !eventNum\n      ? (eventNum = this.state.numberOfEvents)\n      : this.setState({ numberOfEvents: eventNum });\n\n    getEvents().then((events) => {\n      const locationEvents =\n        location === \"all\"\n          ? events\n          : events.filter((event) => event.location === location);\n      this.setState({\n        events: locationEvents.slice(0, eventNum),\n      });\n    });\n  };\n  render() {\n    return (\n      <div className=\"App\">\n        <CitySearch\n          locations={this.state.locations}\n          updateEvents={this.updateEvents}\n        />\n        <EventList events={this.state.events} />\n        <NumberOfEvents\n          numberOfEvents={this.state.numberOfEvents}\n          updateEvents={this.updateEvents}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.unregister();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}